{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Group.svelte",
    "../../Icon.svelte",
    "../../IconButton.svelte",
    "../../Text.svelte",
    "../../IconText.svelte",
    "../../User.svelte"
  ],
  "sourcesContent": [
    "\n\n<script>\n\t// Get context from app initialization or set default context values\n\texport let env = {\n\t\tapiURL : 'http://localhost:3000'\n\t}\n\n\t// get application index\n\timport app from './index'\n\n\t// Set context to use in all application\n\timport { setContext } from 'svelte'\n\n\t// set env\n\tsetContext('env', env);\n\n\t// set services\n\tsetContext('services', app.services)\n\n\t// set helpers\n\tsetContext('helpers', app.helpers)\n\n\t// config requests\n\tconst { client } = app.services\n\tclient.instance.defaults.baseURL = env.apiURL\n\n\t// Load router and routes\n\timport Router from 'svelte-spa-router'\n\timport routes from './routes/index'\n\n</script>\n\n<Router {routes}></Router>\n\n<style>\n\t:global(main) {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\t@media (min-width: 640px) {\n\t\t:global(main) {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\r\n    export let direction = 'column'\r\n    export let width = \"auto\"\r\n    export let justify = \"flex-start\"\r\n\r\n    let style = `\r\n                --direction:${direction};\r\n                --width:${width};\r\n                --justify:${justify};\r\n                `\r\n</script>\r\n\r\n<style>\r\n    .Group{\r\n        display:flex;\r\n        flex-direction: var(--direction);\r\n        justify-content: var(--justify);\r\n        line-height: var(--line-height);\r\n        width: var(--width);\r\n    }\r\n</style>\r\n\r\n<div class=\"Group\" {style}>\r\n    <slot></slot>\r\n</div>",
    "<script>\r\n    export let icon = 'gear'\r\n    export let circled = false\r\n    export let size = 1\r\n    export let bgColor = 'transparent'\r\n    export let fgColor = 'black'\r\n\r\n    size = parseInt(size)\r\n\r\n    let style = `\r\n                width:${size}em;\r\n                height:${size}em;\r\n                background-color:${bgColor}\r\n                `\r\n</script>\r\n\r\n<style>\r\n    .circle{\r\n        border-radius: 50%;\r\n        padding:0.4em 0.5em 0.5em 0.5em;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n\r\n{#if circled}\r\n    <div class=\"circle\" {style}>\r\n        <sl-icon name={icon} style=\"color:{fgColor};font-size:{size*0.8}em;\"></sl-icon>\r\n    </div>\r\n    {:else}\r\n        <sl-icon name={icon}></sl-icon>  \r\n{/if}",
    "<script>\r\n    export let icon = 'gear'\r\n    export let circled = false\r\n    export let size = 1\r\n    export let bgColor = '#15CEBC'\r\n    export let fgColor = 'white'\r\n\r\n    size = parseInt(size)\r\n\r\n    let style = `\r\n                width:${size}em;\r\n                height:${size}em;\r\n                background-color:${bgColor}\r\n                `\r\n</script>\r\n\r\n<style>\r\n    .circle{\r\n        border-radius: 50%;\r\n        padding:0.4em 0.5em 0.5em 0.5em;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n\r\n{#if circled}\r\n    <div class=\"circle\" {style}>\r\n        <sl-icon-button name={icon} style=\"color:{fgColor};font-size:{size*0.8}em;\"></sl-icon-button>\r\n    </div>\r\n    {:else}\r\n        <sl-icon-button name={icon} style=\"color:{fgColor};font-size:{size*0.8}em;\" ></sl-icon-button>    \r\n{/if}",
    "<script>\r\n    export let title = false;\r\n    export let text = \"\";\r\n    export let size = \"1em\";\r\n    export let color = \"auto\";\r\n    export let weight = \"400\";\r\n    export let margin = \"0em\";\r\n    export let padding = \"0em\";\r\n    export let align = \"left\";\r\n    export let href = false;\r\n    export let opacity = 1;\r\n    export let w = \"auto\";\r\n    export let background = \"transparent\";\r\n\r\n\r\n    let style;\r\n\r\n    $: style = `\r\n    --size:${size};\r\n    --color:${color};\r\n    --weight:${weight};\r\n    --margin:${margin};\r\n    --align:${align};\r\n    --opacity:${opacity};\r\n    --width:${w};\r\n    --padding:${padding};\r\n    --background:${background};\r\n    `\r\n\r\n</script>\r\n\r\n<style>\r\n    h1, p, a{\r\n        font-size: var(--size);\r\n        color: var(--color);\r\n        background: var(--background);\r\n        margin:var(--margin);\r\n        padding:var(--padding);\r\n        font-weight: var(--weight);\r\n        text-align: var(--align);\r\n        white-space: pre;\r\n        opacity: var(--opacity);\r\n        width: var(--width);\r\n         -webkit-touch-callout: none; /* iOS Safari */\r\n    -webkit-user-select: none; /* Safari */\r\n     -khtml-user-select: none; /* Konqueror HTML */\r\n       -moz-user-select: none; /* Old versions of Firefox */\r\n        -ms-user-select: none; /* Internet Explorer/Edge */\r\n            user-select: none; /* Non-prefixed version, currently\r\n                                  supported by Chrome, Edge, Opera and Firefox */\r\n-webkit-tap-highlight-color: rgba(0,0,0,0);\r\n-webkit-tap-highlight-color: transparent;\r\n        white-space: pre-line;\r\n    }\r\n\r\n    /* *:hover{\r\n        background: var(--hoverBackground);\r\n        color: var(--hoverColor);\r\n    } */\r\n</style>\r\n\r\n    {#if title}\r\n        <h1 {style} on:click>{text}</h1>\r\n    {:else if href}\r\n        <a {href} {style} on:click>{text}</a>\r\n    {:else if text}\r\n        <p {style} on:click>{text}</p>\r\n    {:else}\r\n        <p {style} on:click>\r\n            <slot></slot>\r\n        </p>\r\n    {/if}\r\n\r\n",
    "<script>\r\n    import { Icon, Text } from 'Atoms'\r\n    export let size = 1\r\n\r\n    export let fgColor = \"white\"\r\n    export let bgColor = \"#15CEBC\"\r\n    export let textColor = \"black\"\r\n\r\n    size = parseInt(size)\r\n    let style = `--line-height:${size}em`\r\n\r\n    \r\n</script>\r\n\r\n<style>\r\n    .IconText{\r\n        display:flex;\r\n        flex-direction: row;\r\n        line-height: var(--line-height);\r\n    }\r\n</style>\r\n\r\n<div class=\"IconText\" {style}>\r\n    <Icon circled size={size} {fgColor} {bgColor}></Icon>\r\n    <Text color={textColor} {size}>Settings</Text>\r\n</div>",
    "<script>\r\n    import { Avatar, Text } from 'Atoms'\r\n    export let size = 1\r\n    export let textColor = 'black'\r\n    export let margin = 'auto'\r\n\r\n    $: smaller = `${size * 0.8}em`\r\n\r\n    size = parseInt(size)\r\n    let style = `--color:${textColor};--margin:${margin}`\r\n\r\n    \r\n</script>\r\n\r\n<style>\r\n    .User{\r\n        display:flex;\r\n        flex-direction: row;\r\n        color: var(--color);\r\n        margin: var(--margin);\r\n    }\r\n    \r\n    .UserData{\r\n        display:flex;\r\n        margin-left:1em;\r\n        flex-direction: column;\r\n        color: var(--color);\r\n    }   \r\n</style>\r\n\r\n<div class=\"User\" {style}>\r\n    <Avatar {size}></Avatar>\r\n    <div class=\"UserData\">\r\n        <Text color={textColor} {size}>Settings</Text>\r\n        <Text color={textColor} size={smaller}>Settings</Text>\r\n    </div>\r\n</div>"
  ],
  "names": [],
  "mappings": "AAoCS,IAAI,AAAE,CAAC,AACd,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAClB,IAAI,AAAE,CAAC,AACd,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AClCE,qBAAM,CAAC,AACH,QAAQ,IAAI,CACZ,cAAc,CAAE,IAAI,WAAW,CAAC,CAChC,eAAe,CAAE,IAAI,SAAS,CAAC,CAC/B,WAAW,CAAE,IAAI,aAAa,CAAC,CAC/B,KAAK,CAAE,IAAI,OAAO,CAAC,AACvB,CAAC;ACFD,sBAAO,CAAC,AACJ,aAAa,CAAE,GAAG,CAClB,QAAQ,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAC/B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC;ACND,sBAAO,CAAC,AACJ,aAAa,CAAE,GAAG,CAClB,QAAQ,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAC/B,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC;ACSD,iBAAE,CAAE,gBAAC,CAAE,gBAAC,CAAC,AACL,SAAS,CAAE,IAAI,MAAM,CAAC,CACtB,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,UAAU,CAAE,IAAI,YAAY,CAAC,CAC7B,OAAO,IAAI,QAAQ,CAAC,CACpB,QAAQ,IAAI,SAAS,CAAC,CACtB,WAAW,CAAE,IAAI,QAAQ,CAAC,CAC1B,UAAU,CAAE,IAAI,OAAO,CAAC,CACxB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,IAAI,SAAS,CAAC,CACvB,KAAK,CAAE,IAAI,OAAO,CAAC,CAClB,qBAAqB,CAAE,IAAI,CAChC,mBAAmB,CAAE,IAAI,CACxB,kBAAkB,CAAE,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,CAE7B,2BAA2B,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1C,2BAA2B,CAAE,WAAW,CAChC,WAAW,CAAE,QAAQ,AACzB,CAAC;ACtCD,wBAAS,CAAC,AACN,QAAQ,IAAI,CACZ,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,IAAI,aAAa,CAAC,AACnC,CAAC;ACJD,oBAAK,CAAC,AACF,QAAQ,IAAI,CACZ,cAAc,CAAE,GAAG,CACnB,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,MAAM,CAAE,IAAI,QAAQ,CAAC,AACzB,CAAC,AAED,wBAAS,CAAC,AACN,QAAQ,IAAI,CACZ,YAAY,GAAG,CACf,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,OAAO,CAAC,AACvB,CAAC"
}